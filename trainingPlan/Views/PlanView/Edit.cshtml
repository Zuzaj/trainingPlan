@model trainingPlan.Models.PlanView

@{
    ViewData["Title"] = "Edit Plan";
}

<h2>Edit Plan</h2>

<form asp-action="Edit">
    <div class="form-group">
        <label asp-for="UserId" class="control-label"></label>
        <input asp-for="UserId" class="form-control" />
        <span asp-validation-for="UserId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="WeekStart" class="control-label"></label>
        <input asp-for="WeekStart" class="form-control" type="date"/>
        <span asp-validation-for="WeekStart" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="TrainingIds" class="control-label">Trainings</label>
        <select asp-for="TrainingIds" class="form-control" multiple>
            @foreach (var training in ViewBag.Trainings as List<trainingPlan.Models.Training>)
            {
                @Html.Raw($"<option value=\"{training.Id}\"{(Model.TrainingIds.Contains(training.Id) ? " selected" : "")}>{training.Name}</option>")
            }
        </select>
    </div>
    <div class="form-group">
        <label asp-for="Comments" class="control-label"></label>
        <textarea asp-for="Comments" class="form-control"></textarea>
        <span asp-validation-for="Comments" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
